---
title: "Repro Spano et al 2018"
author: "mhorger"
date: "March 25, 2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message = FALSE, eval = FALSE)
```




## Introduction 
General summary of the article: 
- naps are beneficial for learning in typically developing infants, children, and adults. 
- individuals with Down syndrome have a high rate of disordered sleep than seen in the typical populaiton. Do they experience the same benefits of sleep on learning? 

- Methods - 
Assess retention of new words with various intervals between training and test. Children receive all conditions 1-2 weeks apart
1. after a 5 min delay
2. after a nap (4 hour delay)
3. after 24 hours 
- Planned analysis - 
The first analysis conducted was a repeated measures ANOVA for both wake and nap conditions. The second was a 2x2 ANOVA with delay type as the repeated factor and TD or DS as the between. These were conducted for the 4 and 24 hour delay. 


## Re-analysis 

### Participants 
```{r}
Groups<- c( "DS", "TD")
N <- c(25, 24)
Mean_age <- c(9.49, 5.03)
PercentFemale <- c(52, 54)

demos<- data.frame(Groups, N, Mean_age, PercentFemale)
library(xtable)
knitr::kable(xtable(demos))
```


### Pre-processing and conversion to long format 

```{r, eval=FALSE}

ChangeinRec <- c(as.numeric(unlist(Spano_et_al[,11])),
         as.numeric(unlist(Spano_et_al[,12])),
         as.numeric(unlist(Spano_et_al[,13])),
         as.numeric(unlist(Spano_et_al[,14]))
         )

Group <- 
  rep(c("DS"), 25)
Group<-
  c(Group, rep(c("TD"), 24))
Group<- 
  c(rep(Group, 4))

Subjects <- rep(seq(1:49), 4) 

Condition <- 
  rep(rep(c("WAKE", "SLEEP"), each = 49), 2)

Delay <- 
  rep(c(4, 24), each = 98)

Spano <- data.frame(Subjects, Group, Condition, Delay, ChangeinRec)

```

##Analysis 
The first analysis conducted was a repeated measures ANOVA to determine if there was a difference in baseline performance across wake and nap conditions.
```{r}
Spano$Subjects<- factor(Spano$Subjects)

class(Spano$Subjects)

sum_df<- Spano %>%
          group_by(Subjects,Condition) %>%
          summarise(mCR =mean(ChangeinRec))

ANOVA1<- aov(mCR~Condition + Error(Subjects/(Condition)), sum_df)
summary(ANOVA1)

apa_aov <- apa_print(summary(ANOVA1))
apa_table(
  apa_aov$table
  , caption = "ANOVA table for Experiment 1"
)
```

The second were two 2x2 ANOVAs with delay type as the repeated factor and TD or DS as the between. These were conducted for the 4 and 24 hour delay. 

```{r}
Change4hr <- ChangeinRec[1:98]
Change24hr <- ChangeinRec[99:196]
GroupPerHr <- Group[1:98]
CondPerHr <- Condition[1:98]

TwentyFourHrDelay<- data.frame(Subjects,GroupPerHr, CondPerHr, Change24hr)

FourHrDelay <- data.frame(Subjects,GroupPerHr, CondPerHr, Change4hr)

ANOVA24<- aov(Change24hr~GroupPerHr*CondPerHr + Error(Subjects/(CondPerHr)), TwentyFourHrDelay) 
summary(ANOVA24)

ANOVA4 <-  aov(Change4hr~GroupPerHr*CondPerHr + Error(Subjects/(CondPerHr)), FourHrDelay) 
summary(ANOVA4)

apa_anova4 <- apa_print(summary(ANOVA4))
apa_table(
  apa_anova4$table
  , caption = "ANOVA table for 4 hour delay"
)

apa_anova24 <- apa_print(summary(ANOVA24))
apa_table(
  apa_anova24$table
  , caption = "ANOVA table for 24 hour delay"
)
```
##Table of means 
```{r}
overall_means <- FigureItOut %>%
                  group_by(Grouping, Timing) %>%
                  summarise(meanNTC = mean(NumToCriterion),
                            SEMNTC = (sd(NumToCriterion)/sqrt(length(NumToCriterion))))


overall_means<- data.frame(overall_means)

# make a table of overall means
knitr::kable(overall_means)
```



## Reproducing the figure 

I will focus on the figure that depicts Repetitions required to meet criterion 

```{r}
NumToCriterion<- c(as.numeric(unlist(Spano_et_al[,7])),
         as.numeric(unlist(Spano_et_al[,8])),
         as.numeric(unlist(Spano_et_al[,9]))
         )
Timing<- rep(c("Immediate", "Wake", "Sleep"), each = 49)

Subs <- rep(c(seq(1:49)), 3)
Subs<- as.factor(Subs)

Grouping<-
  rep(c("DS"), 25)
Grouping<-
  c(Grouping, rep(c("TD"), 24))
Grouping<- 
  c(rep(Grouping, 3))

FigureItOut <- data.frame(Subs, Grouping, Timing, NumToCriterion)


ggplot(overall_means, aes(x=Timing,
                          y= meanNTC, 
                          group=Grouping,
                          fill=Grouping))+
  geom_bar( col=brewer.pal(n = 6, name = "RdBu"),
    stat="identity",
    position="dodge")+
  theme_classic(base_size=12)+
  ylab("Repetition required to meet criterion")+
  geom_errorbar( aes(ymin=meanNTC-SEMNTC,
                    ymax=meanNTC+SEMNTC),
                position=position_dodge(width=0.9),
                width=.2,
                color="black")+
  coord_cartesian(ylim=c(0.0, 2.5))


```


Set the properties of each sample including N, mean, SD, kind of distribution 

Round our sample up to N = 25 in each group 
Mean will be mean change in recognition at 24 hours 
Limit the first analysis to only those in the SLEEP condition 

meanTDWake = -0.36791667
sdTDWake = 0.2439040

meanDSWake = -0.15120000
sdDSWake = 0.3158961

meanTDSleep = -0.09083333
sdTDSleep = 0.2309447

meanDSSleep = -0.46160000
sdDSSleep = 0.2580093

normal distribution 
```{r}
#Power analysis

#Set the properties of each sample including N, mean, SD, kind of distribution 

meanSD <- TwentyFourHrDelay %>%
 group_by(GroupPerHr, CondPerHr) %>%
summarise (means = mean(Change24hr),
          stdevs = sd(Change24hr))

#Analyze simulated data to obtain a p value

sim_power <- function(x){
  TDsleep <- rnorm(n = 25, mean=-0.1, sd = 0.2)
  DSsleep <- rnorm(n = 25, mean=-0.5, sd = 0.2)
  TDwake <- rnorm(n = 25, mean=-0.4, sd = 0.2)
  DSwake <- rnorm(n = 25, mean=-0.2, sd = 0.2)
  scores <- c(TDsleep, TDwake,DSsleep, DSwake )
  cond<- rep(rep(c("SLEEP", "WAKE"), each = 25), 4)
  gru<- rep(rep(c("TD", "DS"), each = 50), 2)
  subs<-as.factor(rep(seq(1:50), 2))
  DF<- data.frame(subs, scores, cond, gru)
  novaresults<- summary(aov(scores~gru*cond + Error(subs/(cond)), DF) )
 # novaresults<-str(novaresults)
  return(novaresults$`Error: Within`[[1]]$`Pr(>F)`[1])
}






simple_sim <- function(x){
  sleepers <- rnorm(n = 50, mean = -0.25, sd = 0.2)
  wakers <- rnorm (n = 50, mean = -0.3, sd = 0.2)
  simplescores <- c(sleepers, wakers)
  simplecond <- rep(c("SLEEP", "WAKE"), each = 50)
  simplesubs<-as.factor(seq(1:50))
  simple<- data.frame(simplesubs, sleepers, wakers)
  return(t.test(sleepers, wakers, var.equal = TRUE)$p.value)
}



#Repeat and save p values 

powersim<- c()
for (i in 1:100){
  powersim[i] <- simple_sim(i)
}


#ignore the between sub factor. now it is a within sub design and use the total N . hold N constant (50)


#vector of effect sizes
effect_sizes<- seq(.1, 2, .1)

#run sim for each effect size 100 times 
sims<- 0
power <- sapply(effect_sizes,
        FUN = function (x){
      sims <- replicate(1000, simple_sim(x))
      sim_power_ttest <-  
                   length(sims[sims<.05])/length(sims)
                 return (sim_power_ttest)
               })

print(power)

plot_df <- data.frame(effect_sizes, power)

#i'll plot the power
library(ggplot2)

ggplot(plot_df, aes (x=effect_sizes,
                     y=power))+
  geom_point()+
  geom_line()

```
```{r}
#try for number of subjects 

num_subjects <- seq(10, 1000, 10)
power <- sapply(num_subjects,
                FUN = function (x){
                  pwr.t.test(n=x, 
                             d = .2,
                             sig.level = .05,
                          type = "two.sample", 
                          alternative = "two.sided")$power})

library(ggplot2)
ggplot(plot_df, aes(x = num_subjects, 
                    y = power))+
  geom_point()+
  geom_line()
```

